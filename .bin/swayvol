#!/bin/bash

# Show usage on --help
if [ "$1" == "-h" ] || [ "$1" == "--help" ] || [ "$1" == "" ]; then
  echo "Usage: $0 [sink|source] [up|down|mute]"
  exit 0
fi

# Validate target device type
if [ "$1" != "sink" ] && [ "$1" != "source" ]; then
  echo "Invalid target"
  exit 1
fi
target="$1"

# Get and validate action
if [ "$2" == "up" ]; then
  action="vol"
  vol_offset="+5%"
elif [ "$2" == "down" ]; then
  action="vol"
  vol_offset="-5%"
elif [ "$2" == "mute" ]; then
  action="mute"
else
  exit 1
fi

# Retrieve current status from PA
pa_name_default="$(pactl info | grep -i "Default $target" | awk '{ print $3 }')"
pa_index_default="$(pactl list short ${target}s | grep "$pa_name_default" | awk '{ print $1 }')"
pa_desc_default="$(pactl list ${target}s | grep -A 200 "$pa_name_default" | grep device.description | head -n1 | grep -oP '(?<=device\.description = ").+(?=")')"

# Set new volume/mute
if [ $action == "vol" ]; then
  pactl set-${target}-volume $pa_index_default $vol_offset
else
  pactl set-${target}-mute $pa_index_default toggle
fi

# Send notification

# Get new volume for notification
new_vol="$( pactl list ${target}s | grep -A 100 "$pa_name_default" | grep '^[[:space:]]Volume:' | head -n1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,' )"
vol_string="${new_vol}%"

# Check whether device is muted
muted=0
pactl list ${target}s | grep -A 100 "$pa_name_default" | grep "Mute:" | head -n1 | grep -q yes && muted=1 && vol_string="muted"

# Retrieve notification id
notif_id_arg="-r $(cat /tmp/.swayvol-nid 2> /dev/null)"
if [ "$notif_id_arg" == "-r " ]; then
  notif_id_arg="-p"
fi

# Set emoji
if [ $target = "source" ]; then
  emoji="ðŸŽ¤"
elif [ $muted == 1 ]; then
  emoji="ðŸ”‡"
else
  if [ $new_vol -gt 66 ]; then
    emoji="ðŸ”Š"
  elif [ $new_vol -gt 33 ]; then
    emoji="ðŸ”‰"
  else
    emoji="ðŸ”ˆ"
  fi
fi

notify-send -p $notif_id_arg -t 1000 "$emoji $pa_desc_default" "Volume ${vol_string}" > /tmp/.swayvol-nid

